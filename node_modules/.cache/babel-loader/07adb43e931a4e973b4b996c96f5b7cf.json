{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from 'react';\n\nconst createBOardState = () => Array(9).fill(null);\n\nconst calculateWinner = boardState => {\n  const winningCominations = [[0, 1, 2], [3, 4, 2], [6, 7, 2], [0, 3, 2], [1, 4, 2], [2, 5, 2], [0, 4, 2], [2, 4, 2]];\n\n  for (let i = 0; i < winningCominations.length; i++) {\n    const [a, b, c] = winningCominations[i];\n    if (boardState[a] && boardState[a] === boardState[b] && boardState[a] === boardState[c]) return boardState[a];\n  }\n\n  return null;\n};\n\nexport function useGameState() {\n  _s();\n\n  const [gameState, setGameState] = useState({\n    history: [createBOardState()],\n    step: 0\n  });\n  const current = gameState.history[gameState.step];\n  const xIsNext = gameState.step % 2 === 0;\n  const winner = calculateWinner(current);\n\n  function handleClick(square) {\n    const history = gameState.history.slice(0, gameState.step + 1);\n    const boardState = history[history.length - 1];\n\n    if (calculateWinner(boardState) || boardState[square]) {\n      return;\n    }\n\n    const newBoardState = boardState.slice();\n    newBoardState[square] = gameState.step % 2 === 0 ? 'X' : 'O';\n    history.push(newBoardState);\n    setGameState({\n      history: history,\n      step: history.length - 1\n    });\n  }\n\n  function jumpTo(step) {\n    setGameState({\n      history: gameState.history,\n      step\n    });\n  }\n\n  return {\n    gameState,\n    current,\n    xIsNext,\n    winner,\n    handleClick,\n    jumpTo\n  };\n}\n\n_s(useGameState, \"7YtCNLTUt7p/osmTLYyEuifNuJc=\");","map":{"version":3,"sources":["D:/tic-tac-toe/src/components/GameStatus.tsx"],"names":["useState","createBOardState","Array","fill","calculateWinner","boardState","winningCominations","i","length","a","b","c","useGameState","gameState","setGameState","history","step","current","xIsNext","winner","handleClick","square","slice","newBoardState","push","jumpTo"],"mappings":"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","sourcesContent":["import {useState} from 'react';\r\n\r\nexport type Value = 'X' | 'O' | null;\r\n\r\nexport type BoardState = Value[];\r\nconst createBOardState = () => Array<Value>(9).fill(null);\r\n\r\nconst calculateWinner = (boardState: BoardState) => {\r\n    const winningCominations = [\r\n        [0 ,1 ,2],\r\n        [3 ,4 ,2],\r\n        [6 ,7 ,2],\r\n        [0 ,3 ,2],\r\n        [1 ,4 ,2],\r\n        [2 ,5 ,2],\r\n        [0 ,4 ,2],\r\n        [2 ,4 ,2],\r\n    ];\r\n\r\n    for (let i = 0; i < winningCominations.length; i++) {\r\n        const [a, b, c] = winningCominations[i];\r\n        if (boardState[a] && boardState[a] === boardState[b] && boardState[a] === boardState[c]) \r\n            return boardState[a];\r\n    }\r\n    return null;\r\n}\r\n\r\nexport type GameState = {\r\n    history: BoardState[],\r\n    step: number,\r\n}\r\n\r\nexport function useGameState() {\r\n    const [gameState, setGameState] = useState<GameState>({\r\n        history: [createBOardState()],\r\n        step: 0\r\n    });\r\n\r\n    const current = gameState.history[gameState.step];\r\n    const xIsNext = (gameState.step %2) === 0;\r\n    const winner = calculateWinner(current);\r\n\r\n    function handleClick(square: number) {\r\n        const history = gameState.history.slice(0, gameState.step +1);\r\n        const boardState = history[history.length - 1];\r\n        if (calculateWinner(boardState) || boardState[square]) {\r\n            return;\r\n        }\r\n\r\n        const newBoardState = boardState.slice();\r\n        newBoardState[square] = (gameState.step % 2) === 0 ? 'X' : 'O';\r\n        history.push(newBoardState);\r\n        setGameState({\r\n            history: history,\r\n            step: history.length - 1,\r\n        });\r\n    }\r\n\r\n    function jumpTo(step:number) {\r\n        setGameState({\r\n            history: gameState.history,\r\n            step\r\n        })\r\n    }\r\n\r\n    return{\r\n        gameState, \r\n        current,\r\n        xIsNext,\r\n        winner,\r\n        handleClick,\r\n        jumpTo\r\n    };\r\n}"]},"metadata":{},"sourceType":"module"}